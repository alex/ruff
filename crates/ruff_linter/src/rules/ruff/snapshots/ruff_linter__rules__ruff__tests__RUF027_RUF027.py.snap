---
source: crates/ruff_linter/src/rules/ruff/mod.rs
---
RUF027.py:5:9: RUF027 [*] Possible f-string without an `f` prefix
  |
3 | def simple_cases():
4 |     a = 4
5 |     b = "{a}" # RUF027
  |         ^^^^^ RUF027
6 |     c = "{a} {b} f'{val}' " # RUF027
7 |     uppercase = "{a}".to_upper() # RUF027
  |
  = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
2 2 | 
3 3 | def simple_cases():
4 4 |     a = 4
5   |-    b = "{a}" # RUF027
  5 |+    b = f"{a}" # RUF027
6 6 |     c = "{a} {b} f'{val}' " # RUF027
7 7 |     uppercase = "{a}".to_upper() # RUF027
8 8 | 

RUF027.py:6:9: RUF027 [*] Possible f-string without an `f` prefix
  |
4 |     a = 4
5 |     b = "{a}" # RUF027
6 |     c = "{a} {b} f'{val}' " # RUF027
  |         ^^^^^^^^^^^^^^^^^^^ RUF027
7 |     uppercase = "{a}".to_upper() # RUF027
  |
  = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
3 3 | def simple_cases():
4 4 |     a = 4
5 5 |     b = "{a}" # RUF027
6   |-    c = "{a} {b} f'{val}' " # RUF027
  6 |+    c = f"{a} {b} f'{val}' " # RUF027
7 7 |     uppercase = "{a}".to_upper() # RUF027
8 8 | 
9 9 | def escaped_string():

RUF027.py:7:17: RUF027 [*] Possible f-string without an `f` prefix
  |
5 |     b = "{a}" # RUF027
6 |     c = "{a} {b} f'{val}' " # RUF027
7 |     uppercase = "{a}".to_upper() # RUF027
  |                 ^^^^^ RUF027
8 | 
9 | def escaped_string():
  |
  = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
4 4 |     a = 4
5 5 |     b = "{a}" # RUF027
6 6 |     c = "{a} {b} f'{val}' " # RUF027
7   |-    uppercase = "{a}".to_upper() # RUF027
  7 |+    uppercase = f"{a}".to_upper() # RUF027
8 8 | 
9 9 | def escaped_string():
10 10 |     a = 4

RUF027.py:15:9: RUF027 [*] Possible f-string without an `f` prefix
   |
13 | def raw_string():
14 |     a = 4
15 |     b = r"raw string with formatting: {a}" # RUF027
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF027
16 |     c = r"raw string with \backslashes\ and \"escaped quotes\": {a}"
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
12 12 | 
13 13 | def raw_string():
14 14 |     a = 4
15    |-    b = r"raw string with formatting: {a}" # RUF027
   15 |+    b = fr"raw string with formatting: {a}" # RUF027
16 16 |     c = r"raw string with \backslashes\ and \"escaped quotes\": {a}"
17 17 | 
18 18 | def print_name(name: str):

RUF027.py:16:9: RUF027 [*] Possible f-string without an `f` prefix
   |
14 |     a = 4
15 |     b = r"raw string with formatting: {a}" # RUF027
16 |     c = r"raw string with \backslashes\ and \"escaped quotes\": {a}"
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF027
17 | 
18 | def print_name(name: str):
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
13 13 | def raw_string():
14 14 |     a = 4
15 15 |     b = r"raw string with formatting: {a}" # RUF027
16    |-    c = r"raw string with \backslashes\ and \"escaped quotes\": {a}"
   16 |+    c = fr"raw string with \backslashes\ and \"escaped quotes\": {a}"
17 17 | 
18 18 | def print_name(name: str):
19 19 |     a = 4

RUF027.py:20:11: RUF027 [*] Possible f-string without an `f` prefix
   |
18 | def print_name(name: str):
19 |     a = 4
20 |     print("Hello, {name}!") # RUF027
   |           ^^^^^^^^^^^^^^^^ RUF027
21 |     print("The test value we're using today is {a}") # RUF027
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
17 17 | 
18 18 | def print_name(name: str):
19 19 |     a = 4
20    |-    print("Hello, {name}!") # RUF027
   20 |+    print(f"Hello, {name}!") # RUF027
21 21 |     print("The test value we're using today is {a}") # RUF027
22 22 | 
23 23 | def do_nothing(a):

RUF027.py:21:11: RUF027 [*] Possible f-string without an `f` prefix
   |
19 |     a = 4
20 |     print("Hello, {name}!") # RUF027
21 |     print("The test value we're using today is {a}") # RUF027
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF027
22 | 
23 | def do_nothing(a):
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
18 18 | def print_name(name: str):
19 19 |     a = 4
20 20 |     print("Hello, {name}!") # RUF027
21    |-    print("The test value we're using today is {a}") # RUF027
   21 |+    print(f"The test value we're using today is {a}") # RUF027
22 22 | 
23 23 | def do_nothing(a):
24 24 |     return a

RUF027.py:28:33: RUF027 [*] Possible f-string without an `f` prefix
   |
26 | def nested_funcs():
27 |     a = 4
28 |     print(do_nothing(do_nothing("{a}"))) # RUF027
   |                                 ^^^^^ RUF027
29 | 
30 | def tripled_quoted():
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
25 25 | 
26 26 | def nested_funcs():
27 27 |     a = 4
28    |-    print(do_nothing(do_nothing("{a}"))) # RUF027
   28 |+    print(do_nothing(do_nothing(f"{a}"))) # RUF027
29 29 | 
30 30 | def tripled_quoted():
31 31 |     a = 4

RUF027.py:33:19: RUF027 [*] Possible f-string without an `f` prefix
   |
31 |     a = 4
32 |     c = a
33 |     single_line = """ {a} """ # RUF027
   |                   ^^^^^^^^^^^ RUF027
34 |     # RUF027
35 |     multi_line = a = """b { # comment
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
30 30 | def tripled_quoted():
31 31 |     a = 4
32 32 |     c = a
33    |-    single_line = """ {a} """ # RUF027
   33 |+    single_line = f""" {a} """ # RUF027
34 34 |     # RUF027
35 35 |     multi_line = a = """b { # comment
36 36 |     c}  d

RUF027.py:35:22: RUF027 [*] Possible f-string without an `f` prefix
   |
33 |       single_line = """ {a} """ # RUF027
34 |       # RUF027
35 |       multi_line = a = """b { # comment
   |  ______________________^
36 | |     c}  d
37 | |     """
   | |_______^ RUF027
38 |       
39 |   def single_quoted_multi_line():
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
32 32 |     c = a
33 33 |     single_line = """ {a} """ # RUF027
34 34 |     # RUF027
35    |-    multi_line = a = """b { # comment
   35 |+    multi_line = a = f"""b { # comment
36 36 |     c}  d
37 37 |     """
38 38 |     

RUF027.py:42:9: RUF027 [*] Possible f-string without an `f` prefix
   |
40 |       a = 4
41 |       # RUF027
42 |       b = " {\
   |  _________^
43 | |     a} \
44 | |     "
   | |_____^ RUF027
45 |   
46 |   def implicit_concat():
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
39 39 | def single_quoted_multi_line():
40 40 |     a = 4
41 41 |     # RUF027
42    |-    b = " {\
   42 |+    b = f" {\
43 43 |     a} \
44 44 |     "
45 45 | 

RUF027.py:48:9: RUF027 [*] Possible f-string without an `f` prefix
   |
46 | def implicit_concat():
47 |     a = 4
48 |     b = "{a}" "+" "{b}" r" \\ " # RUF027 for the first part only
   |         ^^^^^ RUF027
49 | 
50 | def escaped_chars():
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
45 45 | 
46 46 | def implicit_concat():
47 47 |     a = 4
48    |-    b = "{a}" "+" "{b}" r" \\ " # RUF027 for the first part only
   48 |+    b = f"{a}" "+" "{b}" r" \\ " # RUF027 for the first part only
49 49 | 
50 50 | def escaped_chars():
51 51 |     a = 4

RUF027.py:52:9: RUF027 [*] Possible f-string without an `f` prefix
   |
50 | def escaped_chars():
51 |     a = 4
52 |     b = "\"escaped:\" \'{a}\' \"not escaped:\": \'{{c}}\'" # RUF027
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF027
53 | 
54 | def alternative_formatter(src, **kwargs):
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
49 49 | 
50 50 | def escaped_chars():
51 51 |     a = 4
52    |-    b = "\"escaped:\" \'{a}\' \"not escaped:\": \'{{c}}\'" # RUF027
   52 |+    b = f"\"escaped:\" \'{a}\' \"not escaped:\": \'{{c}}\'" # RUF027
53 53 | 
54 54 | def alternative_formatter(src, **kwargs):
55 55 |     src.format(**kwargs)

RUF027.py:80:7: RUF027 [*] Possible f-string without an `f` prefix
   |
78 | "always ignore this: {a}"
79 | 
80 | print("but don't ignore this: {val}")
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF027
   |
   = help: Add an `f` prefix to the f-string

ℹ Unsafe fix
77 77 | 
78 78 | "always ignore this: {a}"
79 79 | 
80    |-print("but don't ignore this: {val}")
   80 |+print(f"but don't ignore this: {val}")


